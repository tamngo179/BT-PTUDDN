name: Week 5 CD - Simple ArgoCD Deployment

on:
  # Trigger after CI completes
  workflow_run:
    workflows: ["Week 5 CI/CD Pipeline"]
    types:
      - completed
    branches: [main]
  
  # Manual trigger
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force sync ArgoCD application'
        required: false
        default: false
        type: boolean

env:
  ARGOCD_SERVER: localhost:8080
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set image tag
      id: image-tag
      run: |
        if [ "${{ github.event_name }}" == "workflow_run" ]; then
          IMAGE_TAG="sha-${{ github.event.workflow_run.head_sha }}"
        else
          IMAGE_TAG="latest"
        fi
        echo "tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
        echo "🏷️ Using image tag: $IMAGE_TAG"

    - name: Update Kubernetes manifests
      run: |
        IMAGE_TAG="${{ steps.image-tag.outputs.tag }}"
        NEW_IMAGE="ghcr.io/${{ github.repository_owner }}/course-tracker:$IMAGE_TAG"
        
        echo "� Updating deployment image to: $NEW_IMAGE"
        
        # Update deployment.yaml with new image
        sed -i "s|image: ghcr.io/.*/course-tracker:.*|image: $NEW_IMAGE|g" "Week 5/k8s/deployment.yaml"
        
        # Commit changes back to repository
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add "Week 5/k8s/deployment.yaml"
        
        if git diff --staged --quiet; then
          echo "📝 No changes to commit"
        else
          git commit -m "Update image to $NEW_IMAGE [skip ci]"
          git push
          echo "✅ Updated manifest committed and pushed"
        fi

    - name: Wait for ArgoCD sync
      run: |
        echo "⏳ Waiting for ArgoCD to detect and sync changes..."
        echo "🔄 ArgoCD will automatically sync the updated manifests"
        echo "📊 Check ArgoCD UI at: http://localhost:8080"
        
        # Simple wait to allow ArgoCD to detect changes
        sleep 30
        
        echo "✅ CD pipeline completed!"
        echo "🎯 Check deployment status in ArgoCD dashboard"

    - name: Summary
      run: |
        IMAGE_TAG="${{ steps.image-tag.outputs.tag }}"
        
        echo "� Week 5 Simple CD Summary"
        echo "=========================="
        echo ""
        echo "🏷️ Image Tag: $IMAGE_TAG" 
        echo "🔄 Trigger: ${{ github.event_name }}"
        echo "✅ Manifest updated successfully"
        echo ""
        echo "📊 Next Steps:"
        echo "1. Check ArgoCD dashboard: http://localhost:8080"
        echo "2. ArgoCD will auto-sync within 3 minutes"
        echo "3. Monitor deployment status in ArgoCD UI"
        echo ""
        echo "� CD Pipeline completed!"
