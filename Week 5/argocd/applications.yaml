apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: course-tracker-staging
  namespace: argocd
  labels:
    app: course-tracker
    environment: staging
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  project: default
  
  source:
    repoURL: https://github.com/tamngo179/BT-PTUDDN.git
    targetRevision: main
    path: week 5/k8s
    
    # Kustomize configuration
    kustomize:
      images:
      - ghcr.io/tamngo179/course-tracker:latest
      
      # Environment-specific patches
      patchesStrategicMerge:
      - |-
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: course-tracker-deployment
        spec:
          replicas: 2
          template:
            spec:
              containers:
              - name: course-tracker
                env:
                - name: SPRING_PROFILES_ACTIVE
                  value: "staging"
                resources:
                  requests:
                    memory: "256Mi"
                    cpu: "250m"
                  limits:
                    memory: "512Mi"
                    cpu: "500m"
      
      # ConfigMap for staging
      configMapGenerator:
      - name: app-config
        literals:
        - environment=staging
        - log.level=INFO
        - metrics.enabled=true
        
  destination:
    server: https://kubernetes.default.svc
    namespace: staging
    
  syncPolicy:
    automated:
      prune: true
      selfHeal: true
      allowEmpty: false
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    retry:
      limit: 5
      backoff:
        duration: 5s
        factor: 2
        maxDuration: 3m
        
  # Health checks and ignore differences
  ignoreDifferences:
  - group: apps
    kind: Deployment
    jsonPointers:
    - /spec/replicas
    
  # Custom health checks
  health:
    - group: ""
      kind: Service
      check: |
        health_status = {}
        if obj.status ~= nil then
          if obj.status.loadBalancer ~= nil then
            health_status.status = "Healthy"
            health_status.message = "Service has load balancer"
          else
            health_status.status = "Progressing"
            health_status.message = "Waiting for load balancer"
          end
        end
        return health_status
---
apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: course-tracker-production
  namespace: argocd
  labels:
    app: course-tracker
    environment: production
  annotations:
    argocd.argoproj.io/sync-wave: "2"
spec:
  project: default
  
  source:
    repoURL: https://github.com/tamngo179/BT-PTUDDN.git
    targetRevision: main
    path: week 5/k8s
    
    kustomize:
      images:
      - ghcr.io/tamngo179/course-tracker:latest
      
      # Production-specific patches
      patchesStrategicMerge:
      - |-
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: course-tracker-deployment
        spec:
          replicas: 5
          template:
            spec:
              containers:
              - name: course-tracker
                env:
                - name: SPRING_PROFILES_ACTIVE
                  value: "production"
                - name: JVM_OPTS
                  value: "-Xmx768m -Xms512m"
                resources:
                  requests:
                    memory: "512Mi"
                    cpu: "500m"
                  limits:
                    memory: "1Gi"
                    cpu: "1000m"
                readinessProbe:
                  httpGet:
                    path: /health
                    port: 8080
                  initialDelaySeconds: 45
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
                livenessProbe:
                  httpGet:
                    path: /health
                    port: 8080
                  initialDelaySeconds: 90
                  periodSeconds: 30
                  timeoutSeconds: 10
                  failureThreshold: 3
      
      # Production ConfigMap
      configMapGenerator:
      - name: app-config
        literals:
        - environment=production
        - log.level=WARN
        - metrics.enabled=true
        - tracing.enabled=true
        
  destination:
    server: https://kubernetes.default.svc
    namespace: production
    
  # Production uses manual sync for safety
  syncPolicy:
    syncOptions:
    - CreateNamespace=true
    - PrunePropagationPolicy=foreground
    - PruneLast=true
    retry:
      limit: 3
      backoff:
        duration: 10s
        factor: 2
        maxDuration: 5m